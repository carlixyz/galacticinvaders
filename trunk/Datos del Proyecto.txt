galacticinvaders - Proyecto de Juego de Charly 

Autor : CARLOS SEBASTIAN LOPEZ - https://galacticinvaders.googlecode.com/svn/trunk/

Versión Actual 0.7 - Rev 7:
El juego está practicamente funcional
Ya Casi, Casi estamos, solo faltaría ajustar mejor el sistema de las listas de borrado de objetos y esas cosas la idea es mejorar un poco el sistema de movimiento de los enemigos y hacer que se asemeje realmente al de la versión original pero de todos modos así como está ya está bastante bonito no?.
Cambio de Estados: No Hay, improvisé un par de cosas hardcoreadas bastantes chapuceras que en la practica funciónan y quedan bastante bonitas !


- Rev 6:
Bueno evidentemente el problema estaba en un segundo puntero de la lista de colissiones que accedía al mismo objeto en la memoria incluso luego de haber sido borrado, evidentemente tengo problemas con la memoria ja!
en su condicion actual el proyecto ya es jugable así que voy a subír la versión para continuar haciendo un par de ultimas modificaciónes intensas más y luego doy por terminado el proyecto

- Rev 5:

Retomando el trabajillo abandonado cambié un poco el enfoque y encontré un par de deficiencias: 
me contesto a mi mismo la pregunta que tenía en la Revisión anterior lo que pensé hacer es justamente hacér el chequeo de colisiones dentro del mismo update de esa manera si un objeto colisiona estando en una posición no debería volver a  hacerlo habiendo cambiado de lugar en el sigte. frame, para poder agilizar un poco las comprobaciones decidí  chequear el funcionamiento en modo debug directamente implementando la busqueda de coicidencia con las reglas en la función  IsInCell, y curioso, pero FUNCIONa!, todo se mueve rapido y correctamente, los enemigos disparan y sus proyectiles desaparecen al impactar en el fondo de la pantalla, pero ...
siempre hay un pero curiosamente el disparo del jugador (o sea el nuestro) produce un error de memoria al alcanzar alguna celda numero "3" 
¡ lo que funciona con el disparo de los enemigos no sirve para el nuestro ?!!
excepto eso creo que todo lo demás funciona, pero habría que ver en otras Pcs.
Una vez que verifique el completo funcionamiento de esto, entonces si ya voy a procurar simplificar en una función la verificación de objetos vs. Objetos y Objetos vs. Cells 
(que me confunde bastante)

- Rev 4:
Atorado con el chequeo de collisiones ¿ como verificar que no se realize dos veces la misma colision vista desde cada uno de los dos objetos distintos ? La Colision siempre es UNA sola...
Desactive temporalmente lo de los dialogos, la idea es que se ofrezca como opción al comienzo del juego, Comenzé bien y ahora estoy un poco frenado, a ver si puedo terminar lo que me propuse.


- Rev 3:
Haciendo Pequeñas modificaciones rapidas, ajustando el Render de level para hacerlo un poco más eficiente en rendimiento. 


- Rev 2:

Bueno Comenzamos con este proyecto de un juego estilo Space Invaders.
Basicamente lo que hice es tomár la base de las practicas anteriores y empezar a moldear algo alrededor de eso:
-Todo el mapa de Level.xml fué modificado para simular el escenario de un clasico Space Invader (incluso hay algunas estrellas)
- Definimos un par de clases  como player para que muestre una nave en la parte inferior y una clase Enemy que de acuerdo a su symbol definido renderiza un tipo de enemigo u otro 
(hay tres tipos:
* Bug: enemigo estandard
* Spitter: dispara proyectiles
* y Ghost: en este utilizo una tecnica diferente para su creación que me permite escribír menos en el Xml "clonando" el mismo enemigo con el mismo nombre y todo (pero que su borrado resulta de forma desordenada y aleatoria 
- Creamos una Función "Spawn" que permite que los enemigos y el player puedan crear objetos "Shoot" 
que no son otra cosa que los disparos
- Quedaría para agregar más adelante en las proximas versiones algun sistema de score y vidas,(esto ultimo no pensé nada aún como implementar).

PROBLEMAS:
El juego original tenía una cuadrilla de enemigos de 5 x 11:
- en esta versión para poder caracterizarlos Bien a mis aliens, estos son mucho más grandes que el verdadero espacio que ocupan (1 char) así que no hay forma de que entren en la pantalla toda esa cantidad.
- De todos modos si quiero poner un ejercito de cantidad medianamente decente ( supongamos 4 x 5)
trabajar escribiendolos uno por uno en el Xml se hace tedioso además de que luego al ejecutar el juego la lectura hace que el juego se muva MUY LENTA.
Creo que necesito modificar la mecanica de creación y borrado de los objetos para hacerlo de una forma más generica supongamos que la creación, busqueda y borrado de objetos (enemigos, disparos y player) se haga mediante un un número de registro de serie o algo así, la cuestión es que no tengo claro por donde empezar a modificar.


-0.1 : subiendo Archivos de prueba